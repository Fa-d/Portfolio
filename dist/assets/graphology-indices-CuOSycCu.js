import{t as j}from"./mnemonist-C1FF8eT-.js";import{g as x}from"./graphology-utils-BVTRd0vf.js";var P={},v=j,z=x.createEdgeWeightGetter;function E(e,t){return e==="outbound"||e==="inbound"?t.directedSize+t.undirectedSize*2:e==="in"||e==="out"||e==="directed"?t.directedSize:t.undirectedSize*2}function d(e,t){t=t||"outbound";var o=e[t+"Neighbors"].bind(e),n=E(t,e),s=v.getPointerArray(n),p=v.getPointerArray(e.order);this.graph=e,this.neighborhood=new p(n),this.starts=new s(e.order+1),this.nodes=e.nodes();var y={},i,u,r,a,h,c,g=0;for(i=0,u=e.order;i<u;i++)y[this.nodes[i]]=i;for(i=0,u=e.order;i<u;i++)for(h=this.nodes[i],c=o(h),this.starts[i]=g,r=0,a=c.length;r<a;r++)this.neighborhood[g++]=y[c[r]];this.starts[i]=n}d.prototype.bounds=function(e){return[this.starts[e],this.starts[e+1]]};d.prototype.project=function(){var e=this,t={};return e.nodes.forEach(function(o,n){t[o]=Array.from(e.neighborhood.slice(e.starts[n],e.starts[n+1])).map(function(s){return e.nodes[s]})}),t};d.prototype.collect=function(e){var t,o,n={};for(t=0,o=e.length;t<o;t++)n[this.nodes[t]]=e[t];return n};d.prototype.assign=function(e,t){var o=0;this.graph.updateEachNodeAttributes(function(n,s){return s[e]=t[o++],s},{attributes:[e]})};P.NeighborhoodIndex=d;function b(e,t,o){o=o||"outbound";var n=e[o+"Edges"].bind(e),s=E(o,e),p=v.getPointerArray(s),y=v.getPointerArray(e.order),i=z(t).fromMinimalEntry;this.graph=e,this.neighborhood=new y(s),this.weights=new Float64Array(s),this.outDegrees=new Float64Array(e.order),this.starts=new p(e.order+1),this.nodes=e.nodes();var u={},r,a,h,c,g,w,l,f,A,N=0;for(r=0,a=e.order;r<a;r++)u[this.nodes[r]]=r;for(r=0,a=e.order;r<a;r++)for(g=this.nodes[r],l=n(g),this.starts[r]=N,h=0,c=l.length;h<c;h++)f=l[h],w=e.opposite(g,f),A=i(f,e.getEdgeAttributes(f)),this.neighborhood[N]=u[w],this.weights[N++]=A,this.outDegrees[r]+=A;this.starts[r]=s}b.prototype.bounds=d.prototype.bounds;b.prototype.project=d.prototype.project;b.prototype.collect=d.prototype.collect;b.prototype.assign=d.prototype.assign;P.WeightedNeighborhoodIndex=b;export{P as n};
