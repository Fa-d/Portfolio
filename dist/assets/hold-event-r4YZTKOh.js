/*!
 * hold-event
 * https://github.com/yomotsu/hold-event
 * (c) 2020 @yomotsu
 * Released under the MIT License.
 */var l;(function(d){d.HOLD_START="holdStart",d.HOLD_END="holdEnd",d.HOLDING="holding"})(l||(l={}));class h{constructor(){this._listeners={}}addEventListener(e,s){const t=this._listeners;t[e]===void 0&&(t[e]=[]),t[e].indexOf(s)===-1&&t[e].push(s)}removeEventListener(e,s){const n=this._listeners[e];if(n!==void 0){const i=n.indexOf(s);i!==-1&&n.splice(i,1)}}dispatchEvent(e){const t=this._listeners[e.type];if(t!==void 0){e.target=this;const n=t.slice(0);for(let i=0,a=n.length;i<a;i++)n[i].call(this,e)}}}class r extends h{constructor(e){super(),this._enabled=!0,this._holding=!1,this._intervalId=-1,this._deltaTime=0,this._elapsedTime=0,this._lastTime=0,this._holdStart=s=>{if(!this._enabled||this._holding)return;this._deltaTime=0,this._elapsedTime=0,this._lastTime=performance.now(),this.dispatchEvent({type:l.HOLD_START,deltaTime:this._deltaTime,elapsedTime:this._elapsedTime,originalEvent:s}),this._holding=!0;const t=()=>{this._intervalId=this.holdIntervalDelay?window.setTimeout(t,this.holdIntervalDelay):window.requestAnimationFrame(t);const n=performance.now();this._deltaTime=n-this._lastTime,this._elapsedTime+=this._deltaTime,this._lastTime=performance.now(),this.dispatchEvent({type:l.HOLDING,deltaTime:this._deltaTime,elapsedTime:this._elapsedTime,originalEvent:s})};this._intervalId=this.holdIntervalDelay?window.setTimeout(t,this.holdIntervalDelay):window.requestAnimationFrame(t)},this._holdEnd=s=>{if(!this._enabled||!this._holding)return;const t=performance.now();this._deltaTime=t-this._lastTime,this._elapsedTime+=this._deltaTime,this._lastTime=performance.now(),this.dispatchEvent({type:l.HOLD_END,deltaTime:this._deltaTime,elapsedTime:this._elapsedTime,originalEvent:s}),window.clearTimeout(this._intervalId),window.cancelAnimationFrame(this._intervalId),this._holding=!1},this.holdIntervalDelay=e}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this._enabled||this._holdEnd())}}class _ extends r{constructor(e,s){super(s),this._holdStart=this._holdStart.bind(this),this._holdEnd=this._holdEnd.bind(this);const t=i=>{o(i)||i.keyCode===e&&this._holdStart(i)},n=i=>{i.keyCode===e&&this._holdEnd(i)};document.addEventListener("keydown",t),document.addEventListener("keyup",n),window.addEventListener("blur",this._holdEnd)}}function o(d){const e=d.target;return e.tagName==="INPUT"||e.tagName==="SELECT"||e.tagName==="TEXTAREA"||e.isContentEditable}export{_ as K};
